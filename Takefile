const { join } = require('path');

module.exports = (take) => {
  take.options.shell.printStdout = true;
  take.options.shell.printStderr = true;

  return {
    default: { deps: ['clean', 'build'] },
    build: {
      desc: 'Builds Take',
      async execute() {
        await take.execo('tsc');
      }
    },
    clean: {
      desc: 'Cleans up build output',
      async execute() {
        await take.execo('rm', '-rf', './lib');
      }
    },
    test: {
      desc: 'Tests Take',
      async execute() {
        // use ts-node to allow proper source mapping and not require building
        await take.execo('./node_modules/mocha/bin/mocha', '-r', 'ts-node/register', 'test/**/*.spec.ts');
      },
      children: {
        'run-local': {
          deps: 'build',
          async execute(...args) {
            console.log('--- execution output ---');
            await take.shell('node', ['../bin/cli.js', ...args], { cwd: join(__dirname, './test') });
          }
        }
      }
    },
    publish: {
      desc: 'Publishes Take to npm',
      deps: [
        'default', 'test'
      ],
      async execute() {
        await take.execo('yarn', 'publish');
        await take.execo('git', 'push', 'origin', '--tags');
        await take.execo('yarn', 'global', 'upgrade', '@luvies/take', '--latest');
      }
    }
  };
};
