const { join } = require('path');

module.exports = take => {
  take.options.shell.printStdout = true;
  take.options.shell.printStderr = true;

  return {
    '': {
      desc: 'Clean & build',
      deps: ['clean', 'build'],
    },
    build: {
      desc: 'Builds Take',
      deps: [':lint'],
      async execute() {
        await take.exec('tsc');
      },
    },
    clean: {
      desc: 'Cleans up build output',
      async execute() {
        await take.exec('rm', '-rf', 'dist');
      },
    },
    test: {
      desc: 'Tests Take',
      deps: [':lint'],
      async execute() {
        // use ts-node to allow proper source mapping and not require building
        await take.exec(
          './node_modules/.bin/nyc',
          './node_modules/mocha/bin/mocha',
          '-r', 'ts-node/register',
          '-r', 'source-map-support/register',
          'test/**/*.spec.ts',
        );
      },
      children: {
        'run-local': {
          desc: 'Runs the local version of take using ts-node and the given arguments',
          async execute(...args) {
            console.log('--- execution output ---');
            await take.shell(
              'ts-node',
              [
                '-P', '../tsconfig.json',
                '../src/bin/cli.ts', ...args,
              ],
              {
                echo: false,
                spawn: {
                  cwd: join(__dirname, 'test'),
                },
              },
            );
          },
        },
        coverage: {
          async execute() {
            await take.exec('nyc report --reporter=text-lcov | coveralls');
          },
        },
      },
    },
    lint: {
      desc: 'Lints the src/ folder',
      async execute() {
        await take.exec('tslint', '--project', '.');
        await take.exec('tslint', '--project', 'test');
      },
    },
    fix: {
      desc: 'Lints the src/ folder',
      async execute() {
        await take.exec('tslint', '--project', '.', '--fix');
        await take.exec('tslint', '--project', 'test', '--fix');
      },
    },
    publish: {
      desc: 'Publishes Take to npm',
      deps: [
        ':', ':test',
      ],
      async execute() {
        await take.exec('yarn', 'publish');
        await take.exec('git', 'push', 'origin', '--tags');
        await take.exec('git', 'push');
        await take.exec('yarn', 'global', 'upgrade', '@luvies/take', '--latest');
      },
    },
  };
};
